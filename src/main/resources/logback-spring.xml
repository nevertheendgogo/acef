<?xml version="1.0" encoding="UTF-8"?>
<configuration scan="true" scanPeriod="60 seconds" debug="false">
    <!-- 控制台打印日志的相关配置 -->
    <!--输出到控制台 ConsoleAppender-->
    <!--warn < DEBUG < INFO < WARN < ERROR < FATAL-->
    <appender name="consoleLog" class="ch.qos.logback.core.ConsoleAppender">
        <!--展示格式 layout-->
        <layout class="ch.qos.logback.classic.PatternLayout">
                                                <!--java类行号   彩色输出各级别日志-->
            <pattern>%d{yyyy-MM-dd HH:mm:ss} %logger{36} %line %highlight(%-5level)- %msg%n</pattern>
        </layout>
    </appender>

    <!--生产环境日志输出文件配置-->
    <appender name="fileErrorLogPrd" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <!--如果只是想要 Error 级别的日志，那么需要过滤一下，默认是 info 级别的，ThresholdFilter-->
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <level>info</level>
        </filter>
        <!--滚动策略，按照时间滚动 TimeBasedRollingPolicy-->
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!--文件路径,定义了日志的切分方式——把每一天的日志归档到一个文件中,以防止日志填满整个磁盘空间-->
            <FileNamePattern>/usr/local/all_project_file/acef/log/%d{yyyy-MM-dd}.log</FileNamePattern>
            <!--只保留最近90天的日志-->
            <maxHistory>90</maxHistory>
            <!--用来指定日志文件的上限大小，那么到了这个值，就会删除旧的日志-->
            <totalSizeCap>10MB</totalSizeCap>
        </rollingPolicy>
        <!--日志输出编码格式化-->
        <encoder>
            <charset>UTF-8</charset>
            <!--java类行号-->
            <pattern>%d %logger{36} %line %-5level- %msg%n</pattern>
        </encoder>
    </appender>

    <!--开发环境日志输出文件配置-->
    <appender name="fileErrorLogDev" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <!--如果只是想要 Error 级别的日志，那么需要过滤一下，默认是 info 级别的，ThresholdFilter-->
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <level>info</level>
        </filter>
        <!--滚动策略，按照时间滚动 TimeBasedRollingPolicy-->
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!--文件路径,定义了日志的切分方式——把每一天的日志归档到一个文件中,以防止日志填满整个磁盘空间-->
            <FileNamePattern>E:\日志\%d{yyyy-MM-dd}.log</FileNamePattern>
            <!--只保留最近90天的日志-->
            <maxHistory>90</maxHistory>
            <!--用来指定日志文件的上限大小，那么到了这个值，就会删除旧的日志-->
            <totalSizeCap>10MB</totalSizeCap>
        </rollingPolicy>
        <!--日志输出编码格式化-->
        <encoder>
            <charset>UTF-8</charset>
            <!--java类行号-->
            <pattern>%d %logger{36} %line %-5level- %msg%n</pattern>
        </encoder>
    </appender>

    <!--生产环境配置-->
    <springProfile name="prd">
        <!--指定最基础的日志输出级别-->
        <root level="info">
            <!--appender将会添加到这个logger-->
            <appender-ref ref="consoleLog"/>
            <appender-ref ref="fileErrorLogPrd"/>
            <!--<appender-ref ref="fileErrorLogPrd"/>-->
        </root>
    </springProfile>

    <!--测试、开发环境配置-->
    <springProfile name="test,dev">
        <root level="info">
            <!--appender将会添加到这个logger-->
            <appender-ref ref="consoleLog"/>
            <appender-ref ref="fileErrorLogDev"/>
            <!--<appender-ref ref="consoleLog"/>-->
        </root>
    </springProfile>

</configuration>